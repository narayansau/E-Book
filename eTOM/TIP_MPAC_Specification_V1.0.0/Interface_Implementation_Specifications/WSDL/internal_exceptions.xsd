<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.5.0.201001251616 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company/TIP_Soap_Generator(1.1) (1.1)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) 2010 Members of the TIP Open Source Community

Licensed to Members of the TIP Open Source Community under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
Members of the TIP Open Source Community licences this file to You under the Apache License,
Version 2.0 (the 'License'); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an 'AS IS' BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/tip/internal/exceptions" targetNamespace="http://www.tmforum.org/xml/tip/internal/exceptions" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: TIP_Generator_Internal_Model
                        at version: 1.1
      for all artifacts in package: org.tmforum.tip.internal.exceptions
      Model Description:
      Internal Framework model used by Tigerstripe generators
      Package Description:
      
      Package data summary information:
            entities: 0
 Association Classes: 0
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 8
      </pre>
      </xsd:documentation>
   </xsd:annotation><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** --><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* --><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
   <xsd:complexType name="AccessDenied">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the type of exception raised when the operation fails for security reasons.
The requesting OS does not have access rights to request the given operation. Even if access control is implemented by policies, this exception shall be used in case of access denied.</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:InternalException">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="CommunicationLoss">
      <xsd:annotation>
         <xsd:documentation>
            <p>The target OS (the OS to which the operation is directed) is unable to communicate with an underlying system or resource, and such communication is required to complete the request..</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:InternalException">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ExceptionBase" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the base definition of all TIP operation exceptions. This type is injected by the TIP Generators into code generated from Tigerstripe Exception artifacts where the 'Extends' field has been left as an empty string or as 'java.lang.Exception'.</p>
            <p>This exception  is  abstract</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="reason" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>Free string to define the reason the exception was raised. It should be a short text. Might reference the step in the use case where this exception occurs, if a detailed use case was made for this operation.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="details" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>The more specific details about the exception. Can also be a stack trace.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="extensionInfo" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>
       a generic list of any type of elements. Used for vendor extensions or loose element encapsulation from other namespaces.
      </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
               <xsd:sequence>
                  <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:complexType>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="InternalError">
      <xsd:annotation>
         <xsd:documentation>
            <p>The request has resulted in an OS internal error.</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:InternalException">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="InternalException">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the root of the TIP Framework Internal Exception Heirarchy. All TIP interfaces will as a minimum support the exceptions extending from InternalException.</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:ExceptionBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="InvalidInput">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the type of exception raised for all failures related to operation input parameters.
Typicaly, the request contains an input parameter that is syntactically incorrect or identifies an object of the wrong type or is out of range.</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:InternalException">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="NotImplemented">
      <xsd:annotation>
         <xsd:documentation>
            <p>The entire request is not supported by the target OS or the request with the specified input parameters is not supported. Operations in the interface that include this exception in their throw clause have to be considered as optional operations. In case of attributes, it can be thrown by the modification or the request of an optional attribute to indicate that the attribute is not supported by the implementation. This exception cannot be thrown for a mandatory attribute or operation.</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:InternalException">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="UnableToComply">
      <xsd:annotation>
         <xsd:documentation>
            <p>The target OS (the OS to which the operation is directed) cannot respond to the request.
May be raised whenever the OS cannot respond to a request.
Use Cases may identify specific conditions that will result in this exception.
This is a general exception. Please use more detailed ones (Communication Loss, Access Denied...) whenever possible.</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="tns:InternalException">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
</xsd:schema>